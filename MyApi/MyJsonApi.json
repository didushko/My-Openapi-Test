{
  "swagger": "2.0",
  "info": {
    "description": "Pixi Photo Sharing API",
    "version": "1.0.0",
    "title": "Pixi App API",
    "contact": {
      "email": "nicole.becher@owasp.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "users",
      "description": "Operations available to regular, logged in users"
    },
    {
      "name": "anyone",
      "description": "Operations available to anyone"
    }
  ],
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "anyone"
        ],
        "x-42c-no-authentication": true,
        "x-42c-sensitivity": 2,
        "summary": "login successfully and receive json web token.",
        "parameters": [
          {
            "in": "formData",
            "name": "user",
            "type": "string",
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
            "minLength": 4,
            "maxLength": 50,
            "required": true,
            "format": "email"
          },
          {
            "in": "formData",
            "name": "pass",
            "type": "string",
            "format": "password",
            "pattern": "^[\\w&@#!?]{4,12}$",
            "minLength": 4,
            "maxLength": 30,
            "required": true
          }
        ],
        "operationId": "authenticate",
        "description": "user supplies user name and password and receives a json web token",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "x-42c-local-strategy": {
              "x-42c-strategy": {
                "protections": [
                  {
                    "security-headers_0.1": {
                      "hsts.max_age": 15400,
                      "csp.policy": "default-src: 'self'; upgrade-insecure-requests; block-all-mixed-content"
                    }
                  }
                ]
              }
            },
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                },
                "token": {
                  "type": "string",
                  "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})",
                  "maxLength": 700
                }
              },
              "required": [
                "message",
                "token"
              ]
            }
          },
          "406": {
            "description": "successfully request, but invalid password",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "422": {
            "description": "missing parameters",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          },

          "default": {
            "description": "unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          }
        },
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/api/register": {
      "post": {
        "tags": [
          "anyone"
        ],
        "x-42c-no-authentication": true,
        "x-42c-sensitivity": 5,
        "summary": "register for an account and receive token",
        "operationId": "register",
        "description": "user supplies email and password to register and receives a json web token.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistrationData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully registered, token received",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                },
                "token": {
                  "type": "string",
                  "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})",
                  "maxLength": 700
                }
              }
            }
          },
          "409": {
            "description": "email address already registered",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          }
        },
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/user/info": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get user information",
        "operationId": "userinfo",
        "description": "user supplies valid token and receives all user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "Users JWT Token",
            "required": true,
            "type": "string",
            "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})",
            "maxLength": 700
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "user": {
                  "type": "string",
                  "format": "email",
                  "pattern": "^([a-zA-Z0-9_\\-\\.]+)(@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}))?$",
                  "minLength": 4,
                  "maxLength": 50,
                  "example": "email@email.com"
                },
                "pass": {
                  "type": "string",
                  "format": "string",
                  "pattern": "^[a-zA-Z0-9&@#!?]{4,12}$",
                  "minLength": 4,
                  "maxLength": 12,
                  "example": "p@ssword1"
                },
                "name": {
                  "type": "string",
                  "example": "Johnny Appleseed",
                  "pattern": "(^[\\w\\s\\.]{5,50}$)",
                  "minLength": 5,
                  "maxLength": 50
                },
                "is_admin": {
                  "description": "is admin",
                  "type": "boolean"
                },
                "account_balance": {
                  "description": "remaining balance",
                  "type": "number",
                  "format": "float",
                  "minimum": 0,
                  "maximum": 1000
                }
              }
            }
          },
          "403": {
            "description": "invalid or missing token",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/user/edit_info": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "edit user information",
        "operationId": "edituserinfo",
        "description": "user supplies valid token and updates all user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "userobject",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateData"
            }
          },
          {
            "in": "header",
            "name": "x-access-token",
            "type": "string",
            "required": true,
            "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})",
            "maxLength": 700
          }
        ],
        "responses": {
          "200": {
            "description": "successful authentication sent user information",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "403": {
            "description": "invalid or missing token",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/admin/users/search": {
      "get": {
        "tags": [
          "admins"
        ],
        "summary": "search for a specific user",
        "description": "search for a specific user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "type": "string",
            "required": true,
            "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})",
            "maxLength": 700
          },
          {
            "in": "query",
            "name": "search",
            "type": "string",
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
            "minLength": 4,
            "maxLength": 50,
            "description": "search query ?search=xxx",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful authentication user photo json object",
            "schema": {
              "type": "array",
              "minItems": 0,
              "maxItems": 50,
              "items": {
                "$ref": "#/definitions/UsersItem"
              }
            }
          },
          "403": {
            "description": "invalid or missing token",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "operationId": "userSearch"
      }
    },
    "/api/admin/all_users": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "type": "string",
            "required": true,
            "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})",
            "maxLength": 700
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 50,
              "items": {
                "$ref": "#/definitions/UsersListItem"
              }
            }
          },
          "403": {
            "description": "invalid or missing token",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "required": [
                "message"
              ]
            }
          }
        },
        "tags": [
          "admins"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns the list of ALL users. Must be admin to call.",
        "security": [
          {
            "access-token": []
          }
        ],
        "description": "Returns the list of ALL users. Must be admin to call.",
        "operationId": "adminallusers"
      }
    }
  },
  "definitions": {
    "UsersItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "user": {
          "type": "string",
          "format": "email",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)(@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}))?$",
          "minLength": 4,
          "maxLength": 50,
          "example": "email@email.com"
        },
        "pass": {
          "type": "string",
          "format": "string",
          "pattern": "^[a-zA-Z0-9&@#!?]{4,12}$",
          "minLength": 4,
          "maxLength": 12,
          "example": "p@ssword1"
        },
        "name": {
          "type": "string",
          "example": "Johnny Appleseed",
          "pattern": "(^[\\w\\s\\.]{5,50}$)",
          "minLength": 5,
          "maxLength": 50
        },
        "is_admin": {
          "description": "is admin",
          "type": "boolean"
        },
        "account_balance": {
          "description": "remaining balance",
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1000
        }
      },
      "required": [
        "user",
        "pass"
      ]
    },
    "UsersListItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "user": {
          "type": "string",
          "format": "email",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)(@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}))?$",
          "minLength": 4,
          "maxLength": 50,
          "example": "email@email.com"
        },
        "name": {
          "type": "string",
          "example": "Johnny Appleseed",
          "pattern": "(^[\\w\\s\\.]{5,30}$)",
          "minLength": 5,
          "maxLength": 30
        },
        "account_balance": {
          "description": "remaining balance",
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1000
        }
      },
      "required": [
        "user",
        "name"
      ]
    },
    "UserUpdateData": {
      "type": "object",
      "required": [
        "user",
        "pass",
        "name",
        "is_admin",
        "account_balance"
      ],
      "properties": {
        "user": {
          "type": "string",
          "format": "email",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
          "minLength": 4,
          "maxLength": 50
        },
        "pass": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9&@#!?]{4,12}$",
          "minLength": 4,
          "maxLength": 12
        },
        "name": {
          "type": "string",
          "pattern": "^[\\w\\s\\.]{5,30}$",
          "minLength": 5,
          "maxLength": 30
        },
        "is_admin": {
          "type": "boolean"
        },
        "account_balance": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1000
        }
      }
    },
    "UserRegistrationData": {
      "type": "object",
      "required": [
        "user",
        "pass",
        "name",
        "is_admin",
        "account_balance"
      ],
      "properties": {
        "user": {
          "type": "string",
          "format": "email",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
          "minLength": 4,
          "maxLength": 50
        },
        "pass": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9&@#!?]{4,12}$",
          "minLength": 4,
          "maxLength": 12
        },
        "name": {
          "type": "string",
          "pattern": "^[\\w\\s\\.]{5,30}$",
          "minLength": 5,
          "maxLength": 30
        },
        "is_admin": {
          "type": "boolean"
        },
        "account_balance": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1000
        }
      }
    }
  },
  "host": "pixigo.qa.42crunch.com",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "access-token": {
      "type": "apiKey",
      "in": "header",
      "name": "x-access-token",
      "description": "Most operations need to pass a user token retrieved calling /api/login"
    }
  },
  "produces": [
    "application/json"
  ]
}
